# 1. Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: go-kafka-redis

---

# 2. Zookeeper Deployment & Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: go-kafka-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: wurstmeister/zookeeper
          ports:
            - containerPort: 2181
          env:
            - name: ZOO_MY_ID
              value: "1"
            - name: ZOO_SERVERS
              value: "server.1=zookeeper:2888:3888"

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: go-kafka-redis
spec:
  ports:
    - port: 2181
      targetPort: 2181
  selector:
    app: zookeeper

---

# 3. Kafka Deployment & Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: go-kafka-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"

---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: go-kafka-redis
spec:
  ports:
    - port: 9092
      targetPort: 9092
  selector:
    app: kafka

---

# 4. Redis Deployment & Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: go-kafka-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: go-kafka-redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis

---

# 5. Consumer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  namespace: go-kafka-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
        - name: consumer
          image: your-docker-repo/consumer:latest  # เปลี่ยนเป็น Docker Image ของคุณ
          env:
            - name: KAFKA_BROKER
              value: "kafka:9092"
            - name: REDIS_ADDR
              value: "redis:6379"

---

# 6. Producer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer
  namespace: go-kafka-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
    spec:
      containers:
        - name: producer
          image: your-docker-repo/producer:latest  # เปลี่ยนเป็น Docker Image ของคุณ
          env:
            - name: KAFKA_BROKER
              value: "kafka:9092"

---

# 7. (Optional) Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-kafka-redis-ingress
  namespace: go-kafka-redis
spec:
  rules:
    - host: kafka.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kafka
                port:
                  number: 9092
